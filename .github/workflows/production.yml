name: production

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}:${{ github.sha }}

jobs:
  lint:
    name: code analysis
    runs-on: self-hosted
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: code analysis
        run: make lint

  unit:
    name: unit tests
    needs: lint
    runs-on: self-hosted
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: unit tests
        run: make unit

  build:
    needs: unit
    runs-on: self-hosted
    steps:
      - name: build
        run: make build IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE }}

  acceptance:
    name: acceptance tests
    needs: build
    runs-on: self-hosted
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: acceptance tests
        run: make acceptance IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE }}

  acceptance_cleanup:
    name: acceptance tests cleanup
    if: ${{ always() }}
    needs: acceptance
    runs-on: self-hosted
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: stop acceptance tests
        run: make down

  publish:
    name: docker image publish
    needs: acceptance
    runs-on: self-hosted
    steps:
      - name: docker login
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: docker push
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}

  build_cleanup:
    name: build cleanup
    needs: publish
    runs-on: self-hosted
    steps:
      - name: delete local docker image
        run: docker rmi -f ${{ env.REGISTRY }}/${{ env.IMAGE }}

      - name: delete local docker dangling images
        run: docker image prune -f

  deploy:
    name: docker image deploy
    needs: build_cleanup
    runs-on: self-hosted
    environment: production
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: docker login
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: deploy
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE }} \
          docker -H ${{ secrets.DEPLOY_HOST }} stack deploy --with-registry-auth -c deploy/production.yml test
